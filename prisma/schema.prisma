generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String         @id @default(uuid()) @map("id") @db.Uuid
  firstName    String
  lastName     String
  companyId    String?        @map("company_id")
  BoardMembers BoardMembers[]
  Customer     Customer[]
}

model Customer {
  id         String   @id @default(ulid()) @map("id")
  firstName  String   @map("first_name")
  lastName   String   @map("last_name")
  phone      String   @map("phone")
  email      String   @map("email")
  avatar     String   @map("avatar")
  location   Location @relation(fields: [locationId], references: [id])
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?  @map("user_id") @db.Uuid
  locationId String   @map("location_id")
  createdAt  DateTime @map("created_at")
  updatedAt  DateTime @map("updated_at")
  Order      Order[]
}

model Address {
  id           String     @id @default(ulid()) @map("id")
  street       String     @map("street")
  number       String     @map("number")
  neighborhood String     @map("neighborhood")
  city         String     @map("city")
  country      String     @map("country")
  createdAt    DateTime   @map("created_at")
  location     Location[]
}

model Location {
  id         String     @id @default(ulid()) @map("id")
  complement String?    @map("complement")
  number     String     @map("number")
  addressId  String     @map("address_id")
  createdAt  DateTime   @map("created_at")
  updatedAt  DateTime   @map("updated_at")
  addresses  Address    @relation(fields: [addressId], references: [id])
  branchId   String?    @map("branch_id")
  Branch     Branch?
  Customer   Customer[]
  Order      Order[]
}

model Supplier {
  id        String    @id @default(ulid()) @map("id")
  name      String    @map("name")
  createdAt DateTime  @map("created_at")
  updatedAt DateTime  @map("updated_at")
  companyId String    @map("company_id")
  company   Company   @relation(fields: [companyId], references: [id])
  Invoice   Invoice[]
}

model Company {
  id           String         @id @default(ulid()) @map("id")
  name         String         @map("name")
  createdAt    DateTime       @map("created_at")
  updatedAt    DateTime       @map("updated_at")
  supplier     Supplier[]
  branches     Branch[]
  BoardMembers BoardMembers[]
  Warehouse    Warehouse[]
  Product      Product[]
  Attribute    Attribute[]
  Category     Category[]
}

model Branch {
  id              String            @id @default(ulid()) @map("id")
  name            String            @map("name")
  phone           String            @map("phone")
  location        Location          @relation(fields: [locationId], references: [id])
  locationId      String            @unique @map("location_id")
  companyId       String            @map("company_id")
  isActive        Boolean           @map("is_active")
  createdAt       DateTime          @map("created_at")
  updatedAt       DateTime          @map("updated_at")
  company         Company           @relation(fields: [companyId], references: [id])
  BoardMembers    BoardMembers[]
  BranchWarehouse BranchWarehouse[]
  Order           Order[]
}

model BoardMembers {
  id        String   @id @default(ulid()) @map("id")
  isActive  Boolean  @map("is_active")
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id") @db.Uuid
  companyId String   @map("company_id")
  company   Company  @relation(fields: [companyId], references: [id])
  branchId  String   @map("branch_id")
  branch    Branch   @relation(fields: [branchId], references: [id])
}

model Warehouse {
  id              String            @id @default(ulid()) @map("id")
  name            String            @map("name")
  isActive        Boolean           @map("is_active")
  createdAt       DateTime          @map("created_at")
  updatedAt       DateTime          @map("updated_at")
  company         Company           @relation(fields: [companyId], references: [id])
  companyId       String            @map("company_id")
  BranchWarehouse BranchWarehouse[]
  Stock           Stock[]
}

model BranchWarehouse {
  id          String    @id @default(ulid()) @map("id")
  isActive    Boolean   @map("is_active")
  warehouseId String    @map("warehouse_id")
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  branchId    String    @map("branch_id")
  branch      Branch    @relation(fields: [branchId], references: [id])
}

model Category {
  id        String     @id @default(ulid())
  name      String
  parentId  String     @default("") @map("parent_id")
  parent    Category?  @relation("CategoryParent", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryParent")
  Product   Product[]
  company   Company    @relation(fields: [companyId], references: [id])
  companyId String
}

model Product {
  id          String        @id @default(ulid()) @map("id")
  name        String        @map("name")
  description String        @map("description")
  isActive    Boolean       @map("is_active")
  createdAt   DateTime      @map("created_at")
  updatedAt   DateTime      @map("updated_at")
  sku         SKU[]
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  String
  companyId   String        @map("company_id")
  company     Company       @relation(fields: [companyId], references: [id])
  InvoiceItem InvoiceItem[]
}

model SKU {
  id            String         @id @default(ulid()) @map("id")
  code          String         @map("code")
  createdAt     DateTime       @map("created_at")
  updatedAt     DateTime       @map("updated_at")
  skuAttributes SkuAttribute[]
  productId     String         @map("product_id")
  product       Product        @relation(fields: [productId], references: [id])
  OrderItem     OrderItem[]
  Stock         Stock[]
  Price         Price[]
  InvoiceItem   InvoiceItem[]
}

model Attribute {
  id        String   @id @default(ulid()) @map("id")
  name      String   @map("name")
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
  Option    Option[]
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id")
}

model Option {
  id           String         @id @default(ulid()) @map("id")
  name         String         @map("name")
  createdAt    DateTime       @map("created_at")
  updatedAt    DateTime       @map("updated_at")
  attributeId  String?        @map("attribute_id")
  attribute    Attribute?     @relation(fields: [attributeId], references: [id])
  skuAttribute SkuAttribute[]
}

enum ESkuAttributeType {
  VARIATION
  TECHNICAL
}

model SkuAttribute {
  id        String            @id @default(ulid()) @map("id")
  createdAt DateTime          @map("created_at")
  updatedAt DateTime          @map("updated_at")
  optionId  String            @map("option_id")
  option    Option            @relation(fields: [optionId], references: [id])
  type      ESkuAttributeType @map("type")
  skuId     String            @map("sku_id")
  sku       SKU               @relation(fields: [skuId], references: [id])
}

model Stock {
  id          String    @id @default(ulid()) @map("id")
  amount      Int       @map("amount")
  createdAt   DateTime  @map("created_at")
  updatedAt   DateTime  @map("updated_at")
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String    @map("warehouse_id")
  sku         SKU       @relation(fields: [skuId], references: [id])
  skuId       String    @map("sku_id")
}

model Price {
  id               String   @id @default(ulid()) @map("id")
  value            Decimal  @map("value")
  promotionalValue Decimal  @map("promotional_value")
  createdAt        DateTime @map("created_at")
  updatedAt        DateTime @map("updated_at")
  Sku              SKU      @relation(fields: [skuId], references: [id])
  skuId            String   @map("sku_id")
}

enum EOrderStatus {
  PENDING
  APPROVED
  SHIPPED
  DELIVERED
  DELIVER_FAIL
  CANCELLED
  DECLINED
  REFUNDED
  COMPLETED
}

enum EOrderPaymentMethod {
  PIX
  DEBIT
  CREDIT
}

model Order {
  id            String              @id @default(ulid()) @map("id")
  issuedAt      DateTime            @map("issued_at")
  status        EOrderStatus        @map("status")
  method        EOrderPaymentMethod @map("method")
  total         Decimal             @map("total")
  subtotal      Decimal             @map("subtotal")
  discount      Decimal             @map("discount")
  freight       Decimal             @map("freight")
  payableAmount Decimal             @map("payable_amount")
  createdAt     DateTime            @map("created_at")
  updatedAt     DateTime            @map("updated_at")
  orderItems    OrderItem[]
  shipments     Shipment            @relation(fields: [shipmentId], references: [id])
  shipmentId    String              @unique @map("shipment_id")
  location      Location            @relation(fields: [locationId], references: [id])
  locationId    String              @map("location_id")
  branch        Branch              @relation(fields: [branchId], references: [id])
  branchId      String              @map("branch_id")
  customer      Customer            @relation(fields: [customerId], references: [id])
  customerId    String              @map("customer_id")
  Installment   Installment[]
}

model OrderItem {
  id        String   @id @default(ulid()) @map("id")
  quantity  Int      @map("quantity")
  price     Decimal  @map("price")
  discount  Decimal  @map("discount")
  name      String   @map("name")
  skuId     String   @map("sku_id")
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
  sku       SKU      @relation(fields: [skuId], references: [id])
  Order     Order    @relation(fields: [orderId], references: [id])
  orderId   String   @map("order_id")
}

model Shipment {
  id              String            @id @default(ulid()) @map("id")
  freight         Decimal           @map("freight")
  discount        Decimal           @map("discount")
  createdAt       DateTime          @map("created_at")
  updatedAt       DateTime          @map("updated_at")
  ShipmentAttempt ShipmentAttempt[]
  Order           Order?
}

enum EShipmentAttempt {
  WAITING
  IN_ROUTE
  FINISHED
}

model ShipmentAttempt {
  id         String           @id @default(ulid()) @map("id")
  createdAt  DateTime         @map("created_at")
  updatedAt  DateTime         @map("updated_at")
  status     EShipmentAttempt @map("status")
  shipmentId String           @map("shipment_id")
  Shipment   Shipment         @relation(fields: [shipmentId], references: [id])
}

model Invoice {
  id            String        @id @default(ulid()) @map("id")
  number        String        @map("number")
  issueDate     DateTime      @map("issue_date")
  totalValue    Decimal       @map("total_value")
  paymentDate   DateTime?     @map("payment_date")
  paymentMethod String?       @map("payment_method")
  status        String        @map("status")
  createdAt     DateTime      @map("created_at")
  updatedAt     DateTime      @map("updated_at")
  supplierId    String        @map("supplier_id")
  supplier      Supplier      @relation(fields: [supplierId], references: [id])
  InvoiceItem   InvoiceItem[]
}

model InvoiceItem {
  id        String   @id @default(ulid()) @map("id")
  quantity  Int      @map("quantity")
  price     Decimal  @map("price")
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
  productId String   @map("product_id")
  product   Product  @relation(fields: [productId], references: [id])
  invoiceId String   @map("invoice_id")
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
  SKU       SKU?     @relation(fields: [sKUId], references: [id])
  sKUId     String?
}

model Installment {
  id        String   @id @default(ulid()) @map("id")
  quantity  Int      @map("quantity")
  value     Decimal  @map("value")
  dueDate   DateTime @map("due_date")
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")
  orderId   String   @map("order_id")
  order     Order    @relation(fields: [orderId], references: [id])
}
